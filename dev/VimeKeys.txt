==============================================================================
1. Insert mode

tag                         char                            action  ~
-----------------------------------------------------------------------
|i_CTRL-@|                  CTRL-@                          insert previously inserted text and stop insert
|i_CTRL-A|                  CTRL-A                          insert previously inserted text CTRL-B not used |i_CTRL-B-gone|
|i_CTRL-C|                  CTRL-C                          quit insert mode, without checking for abbreviation, unless 'insertmode' set.
|i_CTRL-D|                  CTRL-D                          delete one shiftwidth of indent in the current line
|i_CTRL-E|                  CTRL-E                          insert the character which is below the cursor
|i_CTRL-G_j|                CTRL-G CTRL-J                   line down, to column where inserting started
|i_CTRL-G_j|                CTRL-G j                        line down, to column where inserting started
|i_CTRL-G_j|                CTRL-G <Down>                   line down, to column where inserting started
|i_CTRL-G_k|                CTRL-G CTRL-K                   line up, to column where inserting started
|i_CTRL-G_k|                CTRL-G k                        line up, to column where inserting started
|i_CTRL-G_k|                CTRL-G <Up>                     line up, to column where inserting started
|i_CTRL-G_u|                CTRL-G u                        start new undoable edit
|i_<BS>|                    <BS>                            delete character before the cursor
|i_digraph|                 {char1}<BS>{char2}              enter digraph (only when 'digraph' option set)
|i_CTRL-H|                  CTRL-H                          same as <BS>
|i_<Tab>|                   <Tab>                           insert a <Tab> character
|i_CTRL-I|                  CTRL-I                          same as <Tab>
|i_<NL>|                    <NL>                            same as <CR>
|i_CTRL-J|                  CTRL-J                          same as <CR>
|i_CTRL-K|                  CTRL-K {char1} {char2}          enter digraph
|i_CTRL-L|                  CTRL-L                          when 'insertmode' set: Leave Insert mode
|i_<CR>|                    <CR>                            begin new line
|i_CTRL-M|                  CTRL-M                          same as <CR>
|i_CTRL-N|                  CTRL-N                          find next match for keyword in front of the cursor
|i_CTRL-O|                  CTRL-O                          execute a single command and return to insert mode
|i_CTRL-P|                  CTRL-P                          find previous match for keyword in front of the cursor
|i_CTRL-Q|                  CTRL-Q                          same as CTRL-V, unless used for terminal control flow
|i_CTRL-R|                  CTRL-R {0-9a-z"%#*:=}           insert the contents of a register
|i_CTRL-R_CTRL-R|           CTRL-R CTRL-R {0-9a-z"%#*:=}    insert the contents of a register literally
|i_CTRL-R_CTRL-O|           CTRL-R CTRL-O {0-9a-z"%#*:=}    insert the contents of a register literally and don't auto-indent
|i_CTRL-R_CTRL-P|           CTRL-R CTRL-P {0-9a-z"%#*:=}    insert the contents of a register literally and fix indent.
|i_CTRL-T|                  CTRL-T                          insert one shiftwidth of indent in current line
|i_CTRL-U|                  CTRL-U                          delete all entered characters in the current line
|i_CTRL-V|                  CTRL-V {char}                   insert next non-digit literally
|i_CTRL-V_digit|            CTRL-V {number}                 insert three digit decimal number as a single byte.
|i_CTRL-W|                  CTRL-W                          delete word before the cursor
|i_CTRL-X|                  CTRL-X {mode}                   enter CTRL-X sub mode, see |i_CTRL-X_index|
|i_CTRL-Y|                  CTRL-Y                          insert the character which is above the cursor
|i_CTRL-Z|                  CTRL-Z                          when 'insertmode' set: suspend Vim
|i_<Esc>|                   <Esc>                           end insert mode (unless 'insertmode' set)
|i_CTRL-[|                  CTRL-[                          same as <Esc>
|i_CTRL-\_CTRL-N|           CTRL-\ CTRL-N                   go to Normal mode
|i_CTRL-\_CTRL-G|           CTRL-\ CTRL-G                   go to mode specified with 'insertmode'
|i_CTRL-]|                  CTRL-]                          trigger abbreviation
|i_CTRL-^|                  CTRL-^                          toggle use of |:lmap| mappings
|i_0_CTRL-D|                0 CTRL-D                        delete all indent in the current line
|i_^_CTRL-D|                ^ CTRL-D                        delete all indent in the current line, restore it in the next line
|i_<Del>|                   <Del>                           delete character under the cursor
|i_<Left>|                  <Left>                          cursor one character left
|i_<S-Left>|                <S-Left>                        cursor one word left
|i_<C-Left>|                <C-Left>                        cursor one word left
|i_<Right>|                 <Right>                         cursor one character right
|i_<S-Right>|               <S-Right>                       cursor one word right
|i_<C-Right>|               <C-Right>                       cursor one word right
|i_<Up>|                    <Up>                            cursor one line up
|i_<S-Up>|                  <S-Up>                          same as <PageUp>
|i_<Down>|                  <Down>                          cursor one line down
|i_<S-Down>|                <S-Down>                        same as <PageDown>
|i_<Home>|                  <Home>                          cursor to start of line
|i_<C-Home>|                <C-Home>                        cursor to start of file
|i_<End>|                   <End>                           cursor past end of line
|i_<C-End>|                 <C-End>                         cursor past end of file
|i_<PageUp>|                <PageUp>                        one screenful backward
|i_<PageDown>|              <PageDown>                      one screenful forward
|i_<F1>|                    <F1>                            same as <Help>
|i_<Help>|                  <Help>                          stop insert mode and display help window
|i_<Insert>|                <Insert>                        toggle Insert/Replace mode
|i_<LeftMouse>|             <LeftMouse>                     cursor at mouse click
|i_<ScrollWheelDown>|       <ScrollWheelDown>               move window three lines down
|i_<S-ScrollWheelDown>|     <S-ScrollWheelDown>             move window one page down
|i_<ScrollWheelUp>|         <ScrollWheelUp>                 move window three lines up
|i_<S-ScrollWheelUp>|       <S-ScrollWheelUp>               move window one page up
|i_<ScrollWheelLeft>|       <ScrollWheelLeft>               move window six columns left
|i_<S-ScrollWheelLeft>|     <S-ScrollWheelLeft>             move window one page left
|i_<ScrollWheelRight>|      <ScrollWheelRight>              move window six columns right
|i_<S-ScrollWheelRight>|    <S-ScrollWheelRight>            move window one page right

CTRL-X submode

|i_CTRL-X_CTRL-D|           CTRL-X CTRL-D                   complete defined identifiers
|i_CTRL-X_CTRL-E|           CTRL-X CTRL-E                   scroll up
|i_CTRL-X_CTRL-F|           CTRL-X CTRL-F                   complete file names
|i_CTRL-X_CTRL-I|           CTRL-X CTRL-I                   complete identifiers
|i_CTRL-X_CTRL-K|           CTRL-X CTRL-K                   complete identifiers from dictionary
|i_CTRL-X_CTRL-L|           CTRL-X CTRL-L                   complete whole lines
|i_CTRL-X_CTRL-N|           CTRL-X CTRL-N                   next completion
|i_CTRL-X_CTRL-O|           CTRL-X CTRL-O                   omni completion
|i_CTRL-X_CTRL-P|           CTRL-X CTRL-P                   previous completion
|i_CTRL-X_CTRL-S|           CTRL-X CTRL-S                   spelling suggestions
|i_CTRL-X_CTRL-T|           CTRL-X CTRL-T                   complete identifiers from thesaurus
|i_CTRL-X_CTRL-Y|           CTRL-X CTRL-Y                   scroll down
|i_CTRL-X_CTRL-U|           CTRL-X CTRL-U                   complete with 'completefunc'
|i_CTRL-X_CTRL-V|           CTRL-X CTRL-V                   complete like in : command line
|i_CTRL-X_CTRL-]|           CTRL-X CTRL-]                   complete tags
|i_CTRL-X_s|                CTRL-X s                        spelling suggestions

==============================================================================
2. Normal mode

CHAR     any non-blank character
WORD     a sequence of non-blank characters
N        a number entered before the command
{motion} a cursor movement command
Nmove    the text that is moved over with a {motion}
SECTION  a section that possibly starts with '}' instead of '{'

note: 1 = cursor movement command; 2 = can be undone/redone

tag                         char                            note action in Normal mode    ~
------------------------------------------------------------------------------
                            CTRL-@                             not used
|CTRL-A|                    CTRL-A                          2  add N to number at/after cursor
|CTRL-B|                    CTRL-B                          1  scroll N screens Backwards
|CTRL-C|                    CTRL-C                             interrupt current (search) command
|CTRL-D|                    CTRL-D                             scroll Down N lines (default: half a screen)
|CTRL-E|                    CTRL-E                             scroll N lines upwards (N lines Extra)
|CTRL-F|                    CTRL-F                          1  scroll N screens Forward
|CTRL-G|                    CTRL-G                             display current file name and position
|<BS>|                      <BS>                            1  same as "h"
|CTRL-H|                    CTRL-H                          1  same as "h"
|<Tab>|                     <Tab>                           1  go to N newer entry in jump list
|CTRL-I|                    CTRL-I                          1  same as <Tab>
|<NL>|                      <NL>                            1  same as "j"
|CTRL-J|                    CTRL-J                          1  same as "j"
|CTRL-L|                    CTRL-L                             redraw screen
|<CR>|                      <CR>                            1  cursor to the first CHAR N lines lower
|CTRL-M|                    CTRL-M                          1  same as <CR>
|CTRL-N|                    CTRL-N                          1  same as "j"
|CTRL-O|                    CTRL-O                          1  go to N older entry in jump list
|CTRL-P|                    CTRL-P                          1  same as "k"
|CTRL-R|                    CTRL-R                          2  redo changes which were undone with 'u'
|CTRL-T|                    CTRL-T                             jump to N older Tag in tag list
|CTRL-U|                    CTRL-U                             scroll N lines Upwards (default: half a screen)
|CTRL-V|                    CTRL-V                             start blockwise Visual mode
|CTRL-W|                    CTRL-W {char}                      window commands, see |CTRL-W|
|CTRL-X|                    CTRL-X                          2  subtract N from number at/after cursor
|CTRL-Y|                    CTRL-Y                             scroll N lines downwards
|CTRL-Z|                    CTRL-Z                             suspend program (or start new shell)
|CTRL-\_CTRL-N|             CTRL-\ CTRL-N                      go to Normal mode (no-op)
|CTRL-\_CTRL-G|             CTRL-\ CTRL-G                      go to mode specified with 'insertmode'
|CTRL-]|                    CTRL-]                             :ta to ident under cursor
|CTRL-^|                    CTRL-^                             edit Nth alternate file (equivalent to ":e #N")
|<Space>|                   <Space>                         1  same as "l"
|!|                         !{motion}{filter}               2  filter Nmove text through the {filter} command
|!!|                        !!{filter}                      2  filter N lines through the {filter} command
|quote|                     "{a-zA-Z0-9.%#:-"}                 use register {a-zA-Z0-9.%#:-"} for next delete, yank or put (uppercase to append) ({.%#:} only work with put)
|#|                         #                               1  search backward for the Nth occurrence of the ident under the cursor
|$|                         $                               1  cursor to the end of Nth next line
|%|                         %                               1  find the next (curly/square) bracket on this line and go to its match, or go to matching comment bracket, or go to matching preprocessor directive.
|N%|                        {count}%                        1  go to N percentage in the file
|&|                         &                               2  repeat last :s
|'|                         '{a-zA-Z0-9}                    1  cursor to the first CHAR on the line with mark {a-zA-Z0-9}
|''|                        ''                              1  cursor to the first CHAR of the line where the cursor was before the latest jump.
|'(|                        '(                              1  cursor to the first CHAR on the line of the start of the current sentence
|')|                        ')                              1  cursor to the first CHAR on the line of the end of the current sentence
|'<|                        '<                              1  cursor to the first CHAR of the line where highlighted area starts/started in the current buffer.
|'>|                        '>                              1  cursor to the first CHAR of the line where highlighted area ends/ended in the current buffer.
|'[|                        '[                              1  cursor to the first CHAR on the line of the start of last operated text or start of put text
|']|                        ']                              1  cursor to the first CHAR on the line of the end of last operated text or end of put text
|'{|                        '{                              1  cursor to the first CHAR on the line of the start of the current paragraph
|'}|                        '}                              1  cursor to the first CHAR on the line of the end of the current paragraph
|(|                         (                               1  cursor N sentences backward
|)|                         )                               1  cursor N sentences forward
|star|                      *                               1  search forward for the Nth occurrence of the ident under the cursor
|+|                         +                               1  same as <CR>
|,|                         ,                               1  repeat latest f, t, F or T in opposite direction N times
|-|                         -                               1  cursor to the first CHAR N lines higher
|.|                         .                               2  repeat last change with count replaced with N
|/|                         /{pattern}<CR>                  1  search forward for the Nth occurrence of {pattern}
|/<CR>|                     /<CR>                           1  search forward for {pattern} of last search
|count|                     0                               1  cursor to the first char of the line
|count|                     1                                  prepend to command to give a count
|count|                     2                                   "
|count|                     3                                   "
|count|                     4                                   "
|count|                     5                                   "
|count|                     6                                   "
|count|                     7                                   "
|count|                     8                                   "
|count|                     9                                   "
|:|                         :                               1  start entering an Ex command
|N:|                        {count}:                           start entering an Ex command with range from current line to N-1 lines down
|;|                         ;                               1  repeat latest f, t, F or T N times
|<|                         <{motion}                       2  shift Nmove lines one 'shiftwidth' leftwards
|<<|                        <<                              2  shift N lines one 'shiftwidth' leftwards
|=|                         ={motion}                       2  filter Nmove lines through "indent"
|==|                        ==                              2  filter N lines through "indent"
|>|                         >{motion}                       2  shift Nmove lines one 'shiftwidth' rightwards
|>>|                        >>                              2  shift N lines one 'shiftwidth' rightwards
|?|                         ?{pattern}<CR>                  1  search backward for the Nth previous occurrence of {pattern}
|?<CR>|                     ?<CR>                           1  search backward for {pattern} of last search
|@|                         @{a-z}                          2  execute the contents of register {a-z} N times
|@:|                        @:                                 repeat the previous ":" command N times
|@@|                        @@                              2  repeat the previous @{a-z} N times
|A|                         A                               2  append text after the end of the line N times
|B|                         B                               1  cursor N WORDS backward
|C|                         ["x]C                           2  change from the cursor position to the end of the line, and N-1 more lines [into buffer x]; synonym for "c$"
|D|                         ["x]D                           2  delete the characters under the cursor until the end of the line and N-1 more lines [into buffer x]; synonym for "d$"
|E|                         E                               1  cursor forward to the end of WORD N
|F|                         F{char}                         1  cursor to the Nth occurrence of {char} to the left
|G|                         G                               1  cursor to line N, default last line
|H|                         H                               1  cursor to line N from top of screen
|I|                         I                               2  insert text before the first CHAR on the line N times
|J|                         J                               2  Join N lines; default is 2
|K|                         K                                  lookup Keyword under the cursor with 'keywordprg'
|L|                         L                               1  cursor to line N from bottom of screen
|M|                         M                               1  cursor to middle line of screen
|N|                         N                               1  repeat the latest '/' or '?' N times in opposite direction
|O|                         O                               2  begin a new line above the cursor and insert text, repeat N times
|P|                         ["x]P                           2  put the text [from buffer x] before the cursor N times
|Q|                         Q                                  switch to "Ex" mode
|R|                         R                               2  enter replace mode: overtype existing characters, repeat the entered text N-1 times
|S|                         ["x]S                           2  delete N lines [into buffer x] and start insert; synonym for "cc".
|T|                         T{char}                         1  cursor till after Nth occurrence of {char} to the left
|U|                         U                               2  undo all latest changes on one line
|V|                         V                                  start linewise Visual mode
|W|                         W                               1  cursor N WORDS forward
|X|                         ["x]X                           2  delete N characters before the cursor [into buffer x]
|Y|                         ["x]Y                              yank N lines [into buffer x]; synonym for "yy"
|ZZ|                        ZZ                                 store current file if modified, and exit
|ZQ|                        ZQ                                 exit current file always
|[|                         [{char}                            square bracket command (see |[| below)
|]|                         ]{char}                            square bracket command (see |]| below)
|^|                         ^                               1  cursor to the first CHAR of the line
|_|                         _                               1  cursor to the first CHAR N - 1 lines lower
|`|                         `{a-zA-Z0-9}                    1  cursor to the mark {a-zA-Z0-9}
|`(|                        `(                              1  cursor to the start of the current sentence
|`)|                        `)                              1  cursor to the end of the current sentence
|`<|                        `<                              1  cursor to the start of the highlighted area
|`>|                        `>                              1  cursor to the end of the highlighted area
|`[|                        `[                              1  cursor to the start of last operated text or start of putted text
|`]|                        `]                              1  cursor to the end of last operated text or end of putted text
|``|                        ``                              1  cursor to the position before latest jump
|`{|                        `{                              1  cursor to the start of the current paragraph
|`}|                        `}                              1  cursor to the end of the current paragraph
|a|                         a                               2  append text after the cursor N times
|b|                         b                               1  cursor N words backward
|c|                         ["x]c{motion}                   2  delete Nmove text [into buffer x] and start insert
|cc|                        ["x]cc                          2  delete N lines [into buffer x] and start insert
|d|                         ["x]d{motion}                   2  delete Nmove text [into buffer x]
|dd|                        ["x]dd                          2  delete N lines [into buffer x]
|do|                        do                              2  same as ":diffget"
|dp|                        dp                              2  same as ":diffput"
|e|                         e                               1  cursor forward to the end of word N
|f|                         f{char}                         1  cursor to Nth occurrence of {char} to the right
|g|                         g{char}                            extended commands, see |g| below
|h|                         h                               1  cursor N chars to the left
|i|                         i                               2  insert text before the cursor N times
|j|                         j                               1  cursor N lines downward
|k|                         k                               1  cursor N lines upward
|l|                         l                               1  cursor N chars to the right
|m|                         m{A-Za-z}                          set mark {A-Za-z} at cursor position
|n|                         n                               1  repeat the latest '/' or '?' N times
|o|                         o                               2  begin a new line below the cursor and insert text, repeat N times
|p|                         ["x]p                           2  put the text [from register x] after the cursor N times
|q|                         q{0-9a-zA-Z"}                      record typed characters into named register {0-9a-zA-Z"} (uppercase to append)
|q|                         q                                  (while recording) stops recording
|q:|                        q:                                 edit : command-line in command-line window
|q/|                        q/                                 edit / command-line in command-line window
|q?|                        q?                                 edit ? command-line in command-line window
|r|                         r{char}                         2  replace N chars with {char}
|s|                         ["x]s                           2  (substitute) delete N characters [into buffer x] and start insert
|t|                         t{char}                         1  cursor till before Nth occurrence of {char} to the right
|u|                         u                               2  undo changes
|v|                         v                                  start characterwise Visual mode
|w|                         w                               1  cursor N words forward
|x|                         ["x]x                           2  delete N characters under and after the cursor [into buffer x]
|y|                         ["x]y{motion}                      yank Nmove text [into buffer x]
|yy|                        ["x]yy                             yank N lines [into buffer x]
|z|                         z{char}                            commands starting with 'z', see |z| below
|{|                         {                               1  cursor N paragraphs backward
|bar|                       |                               1  cursor to column N
|}|                         }                               1  cursor N paragraphs forward
|~|                         ~                               2  'tildeop' off: switch case of N characters under cursor and move the cursor N characters to the right
|~|                         ~{motion}                          'tildeop' on: switch case of Nmove text
|<C-End>|                   <C-End>                         1  same as "G"
|<C-Home>|                  <C-Home>                        1  same as "gg"
|<C-Left>|                  <C-Left>                        1  same as "b"
|<C-LeftMouse>|             <C-LeftMouse>                      ":ta" to the keyword at the mouse click
|<C-Right>|                 <C-Right>                       1  same as "w"
|<C-RightMouse>|            <C-RightMouse>                     same as "CTRL-T"
|<Del>|                     ["x]<Del>                       2  same as "x"
|N<Del>|                    {count}<Del>                       remove the last digit from {count}
|<Down>|                    <Down>                          1  same as "j"
|<End>|                     <End>                           1  same as "$"
|<F1>|                      <F1>                               same as <Help>
|<Help>|                    <Help>                             open a help window
|<Home>|                    <Home>                          1  same as "0"
|<Insert>|                  <Insert>                        2  same as "i"
|<Left>|                    <Left>                          1  same as "h"
|<LeftMouse>|               <LeftMouse>                     1  move cursor to the mouse click position
|<MiddleMouse>|             <MiddleMouse>                   2  same as "gP" at the mouse click position
|<PageDown>|                <PageDown>                         same as CTRL-F
|<PageUp>|                  <PageUp>                           same as CTRL-B
|<Right>|                   <Right>                         1  same as "l"
|<RightMouse>|              <RightMouse>                       start Visual mode, move cursor to the mouse click position
|<S-Down>|                  <S-Down>                        1  same as CTRL-F
|<S-Left>|                  <S-Left>                        1  same as "b"
|<S-LeftMouse>|             <S-LeftMouse>                      same as "*" at the mouse click position
|<S-Right>|                 <S-Right>                       1  same as "w"
|<S-RightMouse>|            <S-RightMouse>                     same as "#" at the mouse click position
|<S-Up>|                    <S-Up>                          1  same as CTRL-B
|<Undo>|                    <Undo>                          2  same as "u"
|<Up>|                      <Up>                            1  same as "k"
|<ScrollWheelDown>|         <ScrollWheelDown>                  move window three lines down
|<S-ScrollWheelDown>|       <S-ScrollWheelDown>                move window one page down
|<ScrollWheelUp>|           <ScrollWheelUp>                    move window three lines up
|<S-ScrollWheelUp>|         <S-ScrollWheelUp>                  move window one page up
|<ScrollWheelLeft>|         <ScrollWheelLeft>                  move window six columns left
|<S-ScrollWheelLeft>|       <S-ScrollWheelLeft>                move window one page left
|<ScrollWheelRight>|        <ScrollWheelRight>                 move window six columns right
|<S-ScrollWheelRight>|      <S-ScrollWheelRight>               move window one page right

==============================================================================
2.4 Commands starting with 'g'

tag                         char                            note action in Normal mode    ~
------------------------------------------------------------------------------
|g_CTRL-A|                  g CTRL-A                           only when compiled with MEM_PROFILE defined: dump a memory profile
|g_CTRL-G|                  g CTRL-G                           show information about current cursor position
|g_CTRL-H|                  g CTRL-H                           start Select block mode
|g_CTRL-]|                  g CTRL-]                           |:tjump| to the tag under the cursor
|g#|                        g#                              1  like "#", but without using "\<" and "\>"
|g$|                        g$                              1  when 'wrap' off go to rightmost character of the current line that is on the screen; when 'wrap' on go to the rightmost character of the current screen line
|g&|                        g&                              2  repeat last ":s" on all lines
|g'|                        g'{mark}                        1  like |'| but without changing the jumplist
|g`|                        g`{mark}                        1  like |`| but without changing the jumplist
|gstar|                     g*                              1  like "*", but without using "\<" and "\>"
|g0|                        g0                              1  when 'wrap' off go to leftmost character of the current line that is on the screen; when 'wrap' on go to the leftmost character of the current screen line
|g8|                        g8                                 print hex value of bytes used in UTF-8 character under the cursor
|g<|                        g<                                 display previous command output
|g?|                        g?                              2  Rot13 encoding operator
|g?g?|                      g??                             2  Rot13 encode current line
|g?g?|                      g?g?                            2  Rot13 encode current line
|gD|                        gD                              1  go to definition of word under the cursor in current file
|gE|                        gE                              1  go backwards to the end of the previous WORD
|gH|                        gH                                 start Select line mode
|gI|                        gI                              2  like "I", but always start in column 1
|gJ|                        gJ                              2  join lines without inserting space
|gP|                        ["x]gP                          2  put the text [from register x] before the cursor N times, leave the cursor after it
|gR|                        gR                              2  enter Virtual Replace mode
|gU|                        gU{motion}                      2  make Nmove text uppercase
|gV|                        gV                                 don't reselect the previous Visual area when executing a mapping or menu in Select mode
|g]|                        g]                                 :tselect on the tag under the cursor
|g^|                        g^                              1  when 'wrap' off go to leftmost non-white character of the current line that is on the screen; when 'wrap' on go to the leftmost non-white character of the current screen line
|ga|                        ga                                 print ascii value of character under the cursor
|gd|                        gd                              1  go to definition of word under the curso in current function
|ge|                        ge                              1  go backwards to the end of the previous word
|gf|                        gf                                 start editing the file whose name is under the cursor
|gF|                        gF                                 start editing the file whose name is under the cursor and jump to the line number following the filename.
|gg|                        gg                              1  cursor to line N, default first line
|gh|                        gh                                 start Select mode
|gi|                        gi                              2  like "i", but first move to the |'^| mark
|gj|                        gj                              1  like "j", but when 'wrap' on go N screen lines down
|gk|                        gk                              1  like "k", but when 'wrap' on go N screen lines up
|gm|                        gm                              1  go to character at middle of the screenline
|go|                        go                              1  cursor to byte N in the buffer
|gp|                        ["x]gp                          2  put the text [from register x] after the cursor N times, leave the cursor after it
|gq|                        gq{motion}                      2  format Nmove text
|gr|                        gr{char}                        2  virtual replace N chars with {char}
|gs|                        gs                                 go to sleep for N seconds (default 1)
|gu|                        gu{motion}                      2  make Nmove text lowercase
|gv|                        gv                                 reselect the previous Visual area
|gw|                        gw{motion}                      2  format Nmove text and keep cursor
|netrw-gx|                  gx                                 execute application for file name under the cursor (only with |netrw| plugin)
|g@|                        g@{motion}                         call 'operatorfunc'
|g~|                        g~{motion}                      2  swap case for Nmove text
|g<Down>|                   g<Down>                         1  same as "gj"
|g<End>|                    g<End>                          1  same as "g$"
|g<Home>|                   g<Home>                         1  same as "g0"
|g<LeftMouse>|              g<LeftMouse>                       same as <C-LeftMouse>
                            g<MiddleMouse>                     same as <C-MiddleMouse>
|g<RightMouse>|             g<RightMouse>                      same as <C-RightMouse>
|g<Up>|                     g<Up>                           1  same as "gk"

